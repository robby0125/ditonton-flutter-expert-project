// Mocks generated by Mockito 5.3.0 from annotations
// in tv_series/test/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:convert' as _i14;
import 'dart:typed_data' as _i15;

import 'package:core/core.dart' as _i13;
import 'package:core/utils/failure.dart' as _i7;
import 'package:dartz/dartz.dart' as _i2;
import 'package:http/http.dart' as _i5;
import 'package:http/io_client.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:sqflite_sqlcipher/sqflite.dart' as _i12;
import 'package:tv_series/data/datasources/db/tv_database_helper.dart' as _i11;
import 'package:tv_series/domain/entities/tv.dart' as _i8;
import 'package:tv_series/domain/entities/tv_detail.dart' as _i9;
import 'package:tv_series/domain/entities/tv_season_detail.dart' as _i10;
import 'package:tv_series/tv_series.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeTvDetailResponse_1 extends _i1.SmartFake
    implements _i3.TvDetailResponse {
  _FakeTvDetailResponse_1(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeTvSeasonDetailResponse_2 extends _i1.SmartFake
    implements _i3.TvSeasonDetailResponse {
  _FakeTvSeasonDetailResponse_2(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeIOStreamedResponse_3 extends _i1.SmartFake
    implements _i4.IOStreamedResponse {
  _FakeIOStreamedResponse_3(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeResponse_4 extends _i1.SmartFake implements _i5.Response {
  _FakeResponse_4(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [TvRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvRepository extends _i1.Mock implements _i3.TvRepository {
  MockTvRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i8.Tv>>> getOnAirTvSeries() =>
      (super.noSuchMethod(Invocation.method(#getOnAirTvSeries, []),
          returnValue: _i6.Future<_i2.Either<_i7.Failure, List<_i8.Tv>>>.value(
              _FakeEither_0<_i7.Failure, List<_i8.Tv>>(
                  this, Invocation.method(#getOnAirTvSeries, [])))) as _i6
          .Future<_i2.Either<_i7.Failure, List<_i8.Tv>>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i8.Tv>>> getPopularTvSeries() =>
      (super.noSuchMethod(Invocation.method(#getPopularTvSeries, []),
          returnValue: _i6.Future<_i2.Either<_i7.Failure, List<_i8.Tv>>>.value(
              _FakeEither_0<_i7.Failure, List<_i8.Tv>>(
                  this, Invocation.method(#getPopularTvSeries, [])))) as _i6
          .Future<_i2.Either<_i7.Failure, List<_i8.Tv>>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i8.Tv>>> getTopRatedTvSeries() =>
      (super.noSuchMethod(Invocation.method(#getTopRatedTvSeries, []),
          returnValue: _i6.Future<_i2.Either<_i7.Failure, List<_i8.Tv>>>.value(
              _FakeEither_0<_i7.Failure, List<_i8.Tv>>(
                  this, Invocation.method(#getTopRatedTvSeries, [])))) as _i6
          .Future<_i2.Either<_i7.Failure, List<_i8.Tv>>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, _i9.TvDetail>> getTvDetail(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvDetail, [id]),
          returnValue: _i6.Future<_i2.Either<_i7.Failure, _i9.TvDetail>>.value(
              _FakeEither_0<_i7.Failure, _i9.TvDetail>(
                  this, Invocation.method(#getTvDetail, [id])))) as _i6
          .Future<_i2.Either<_i7.Failure, _i9.TvDetail>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i8.Tv>>> getTvRecommendation(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvRecommendation, [id]),
          returnValue: _i6.Future<_i2.Either<_i7.Failure, List<_i8.Tv>>>.value(
              _FakeEither_0<_i7.Failure, List<_i8.Tv>>(
                  this, Invocation.method(#getTvRecommendation, [id])))) as _i6
          .Future<_i2.Either<_i7.Failure, List<_i8.Tv>>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, _i10.TvSeasonDetail>> getTvSeasonDetail(
          int? tvId, int? seasonNumber) =>
      (super.noSuchMethod(
              Invocation.method(#getTvSeasonDetail, [tvId, seasonNumber]),
              returnValue:
                  _i6.Future<_i2.Either<_i7.Failure, _i10.TvSeasonDetail>>.value(
                      _FakeEither_0<_i7.Failure, _i10.TvSeasonDetail>(this,
                          Invocation.method(#getTvSeasonDetail, [tvId, seasonNumber]))))
          as _i6.Future<_i2.Either<_i7.Failure, _i10.TvSeasonDetail>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i8.Tv>>> searchTvSeries(
          String? query) =>
      (super.noSuchMethod(Invocation.method(#searchTvSeries, [query]),
          returnValue: _i6.Future<_i2.Either<_i7.Failure, List<_i8.Tv>>>.value(
              _FakeEither_0<_i7.Failure, List<_i8.Tv>>(
                  this, Invocation.method(#searchTvSeries, [query])))) as _i6
          .Future<_i2.Either<_i7.Failure, List<_i8.Tv>>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, String>> saveWatchlist(_i9.TvDetail? tv) =>
      (super.noSuchMethod(Invocation.method(#saveWatchlist, [tv]),
              returnValue: _i6.Future<_i2.Either<_i7.Failure, String>>.value(
                  _FakeEither_0<_i7.Failure, String>(
                      this, Invocation.method(#saveWatchlist, [tv]))))
          as _i6.Future<_i2.Either<_i7.Failure, String>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, String>> removeWatchlist(
          _i9.TvDetail? tv) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [tv]),
              returnValue: _i6.Future<_i2.Either<_i7.Failure, String>>.value(
                  _FakeEither_0<_i7.Failure, String>(
                      this, Invocation.method(#removeWatchlist, [tv]))))
          as _i6.Future<_i2.Either<_i7.Failure, String>>);
  @override
  _i6.Future<bool> isAddedToWatchlist(int? id) =>
      (super.noSuchMethod(Invocation.method(#isAddedToWatchlist, [id]),
          returnValue: _i6.Future<bool>.value(false)) as _i6.Future<bool>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i8.Tv>>> getWatchlistTvSeries() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistTvSeries, []),
          returnValue: _i6.Future<_i2.Either<_i7.Failure, List<_i8.Tv>>>.value(
              _FakeEither_0<_i7.Failure, List<_i8.Tv>>(
                  this, Invocation.method(#getWatchlistTvSeries, [])))) as _i6
          .Future<_i2.Either<_i7.Failure, List<_i8.Tv>>>);
}

/// A class which mocks [TvLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvLocalDataSource extends _i1.Mock implements _i3.TvLocalDataSource {
  MockTvLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<String> insertWatchlist(_i3.TvTable? tv) =>
      (super.noSuchMethod(Invocation.method(#insertWatchlist, [tv]),
          returnValue: _i6.Future<String>.value('')) as _i6.Future<String>);
  @override
  _i6.Future<String> removeWatchlist(_i3.TvTable? tv) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [tv]),
          returnValue: _i6.Future<String>.value('')) as _i6.Future<String>);
  @override
  _i6.Future<_i3.TvTable?> getTvById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvById, [id]),
              returnValue: _i6.Future<_i3.TvTable?>.value())
          as _i6.Future<_i3.TvTable?>);
  @override
  _i6.Future<List<_i3.TvTable>> getWatchlistTvSeries() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistTvSeries, []),
              returnValue: _i6.Future<List<_i3.TvTable>>.value(<_i3.TvTable>[]))
          as _i6.Future<List<_i3.TvTable>>);
  @override
  _i6.Future<void> cacheOnAirTvSeries(List<_i3.TvTable>? tvSeries) =>
      (super.noSuchMethod(Invocation.method(#cacheOnAirTvSeries, [tvSeries]),
              returnValue: _i6.Future<void>.value(),
              returnValueForMissingStub: _i6.Future<void>.value())
          as _i6.Future<void>);
  @override
  _i6.Future<List<_i3.TvTable>> getCachedOnAirTvSeries() =>
      (super.noSuchMethod(Invocation.method(#getCachedOnAirTvSeries, []),
              returnValue: _i6.Future<List<_i3.TvTable>>.value(<_i3.TvTable>[]))
          as _i6.Future<List<_i3.TvTable>>);
  @override
  _i6.Future<void> cachePopularTvSeries(List<_i3.TvTable>? tvSeries) =>
      (super.noSuchMethod(Invocation.method(#cachePopularTvSeries, [tvSeries]),
              returnValue: _i6.Future<void>.value(),
              returnValueForMissingStub: _i6.Future<void>.value())
          as _i6.Future<void>);
  @override
  _i6.Future<List<_i3.TvTable>> getCachedPopularTvSeries() =>
      (super.noSuchMethod(Invocation.method(#getCachedPopularTvSeries, []),
              returnValue: _i6.Future<List<_i3.TvTable>>.value(<_i3.TvTable>[]))
          as _i6.Future<List<_i3.TvTable>>);
  @override
  _i6.Future<void> cacheTopRatedTvSeries(List<_i3.TvTable>? tvSeries) =>
      (super.noSuchMethod(Invocation.method(#cacheTopRatedTvSeries, [tvSeries]),
              returnValue: _i6.Future<void>.value(),
              returnValueForMissingStub: _i6.Future<void>.value())
          as _i6.Future<void>);
  @override
  _i6.Future<List<_i3.TvTable>> getCachedTopRatedTvSeries() =>
      (super.noSuchMethod(Invocation.method(#getCachedTopRatedTvSeries, []),
              returnValue: _i6.Future<List<_i3.TvTable>>.value(<_i3.TvTable>[]))
          as _i6.Future<List<_i3.TvTable>>);
}

/// A class which mocks [TvRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvRemoteDataSource extends _i1.Mock
    implements _i3.TvRemoteDataSource {
  MockTvRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<List<_i3.TvModel>> getOnAirTvSeries() =>
      (super.noSuchMethod(Invocation.method(#getOnAirTvSeries, []),
              returnValue: _i6.Future<List<_i3.TvModel>>.value(<_i3.TvModel>[]))
          as _i6.Future<List<_i3.TvModel>>);
  @override
  _i6.Future<List<_i3.TvModel>> getPopularTvSeries() =>
      (super.noSuchMethod(Invocation.method(#getPopularTvSeries, []),
              returnValue: _i6.Future<List<_i3.TvModel>>.value(<_i3.TvModel>[]))
          as _i6.Future<List<_i3.TvModel>>);
  @override
  _i6.Future<List<_i3.TvModel>> getTopRatedTvSeries() =>
      (super.noSuchMethod(Invocation.method(#getTopRatedTvSeries, []),
              returnValue: _i6.Future<List<_i3.TvModel>>.value(<_i3.TvModel>[]))
          as _i6.Future<List<_i3.TvModel>>);
  @override
  _i6.Future<_i3.TvDetailResponse> getTvDetail(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvDetail, [id]),
              returnValue: _i6.Future<_i3.TvDetailResponse>.value(
                  _FakeTvDetailResponse_1(
                      this, Invocation.method(#getTvDetail, [id]))))
          as _i6.Future<_i3.TvDetailResponse>);
  @override
  _i6.Future<List<_i3.TvModel>> getTvRecommendation(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvRecommendation, [id]),
              returnValue: _i6.Future<List<_i3.TvModel>>.value(<_i3.TvModel>[]))
          as _i6.Future<List<_i3.TvModel>>);
  @override
  _i6.Future<_i3.TvSeasonDetailResponse> getTvSeasonDetail(
          int? tvId, int? seasonNumber) =>
      (super.noSuchMethod(
              Invocation.method(#getTvSeasonDetail, [tvId, seasonNumber]),
              returnValue: _i6.Future<_i3.TvSeasonDetailResponse>.value(
                  _FakeTvSeasonDetailResponse_2(
                      this,
                      Invocation.method(
                          #getTvSeasonDetail, [tvId, seasonNumber]))))
          as _i6.Future<_i3.TvSeasonDetailResponse>);
  @override
  _i6.Future<List<_i3.TvModel>> searchTvSeries(String? query) =>
      (super.noSuchMethod(Invocation.method(#searchTvSeries, [query]),
              returnValue: _i6.Future<List<_i3.TvModel>>.value(<_i3.TvModel>[]))
          as _i6.Future<List<_i3.TvModel>>);
}

/// A class which mocks [TvDatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvDatabaseHelper extends _i1.Mock implements _i11.TvDatabaseHelper {
  MockTvDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i12.Database?> get database =>
      (super.noSuchMethod(Invocation.getter(#database),
              returnValue: _i6.Future<_i12.Database?>.value())
          as _i6.Future<_i12.Database?>);
  @override
  _i6.Future<int> insertTvWatchlist(_i3.TvTable? tv) =>
      (super.noSuchMethod(Invocation.method(#insertTvWatchlist, [tv]),
          returnValue: _i6.Future<int>.value(0)) as _i6.Future<int>);
  @override
  _i6.Future<int> removeTvWatchlist(_i3.TvTable? tv) =>
      (super.noSuchMethod(Invocation.method(#removeTvWatchlist, [tv]),
          returnValue: _i6.Future<int>.value(0)) as _i6.Future<int>);
  @override
  _i6.Future<Map<String, dynamic>?> getTvById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvById, [id]),
              returnValue: _i6.Future<Map<String, dynamic>?>.value())
          as _i6.Future<Map<String, dynamic>?>);
  @override
  _i6.Future<List<Map<String, dynamic>>> getWatchlistTvSeries() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistTvSeries, []),
              returnValue: _i6.Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[]))
          as _i6.Future<List<Map<String, dynamic>>>);
  @override
  _i6.Future<void> insertTvCacheTransaction(
          List<_i3.TvTable>? tvSeries, String? category) =>
      (super.noSuchMethod(
          Invocation.method(#insertTvCacheTransaction, [tvSeries, category]),
          returnValue: _i6.Future<void>.value(),
          returnValueForMissingStub:
              _i6.Future<void>.value()) as _i6.Future<void>);
  @override
  _i6.Future<List<Map<String, dynamic>>> getCacheTvSeries(String? category) =>
      (super.noSuchMethod(Invocation.method(#getCacheTvSeries, [category]),
              returnValue: _i6.Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[]))
          as _i6.Future<List<Map<String, dynamic>>>);
  @override
  _i6.Future<int> clearTvSeriesCache(String? category) =>
      (super.noSuchMethod(Invocation.method(#clearTvSeriesCache, [category]),
          returnValue: _i6.Future<int>.value(0)) as _i6.Future<int>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i13.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<bool> get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected),
          returnValue: _i6.Future<bool>.value(false)) as _i6.Future<bool>);
}

/// A class which mocks [IOClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockIOClient extends _i1.Mock implements _i4.IOClient {
  MockIOClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i4.IOStreamedResponse> send(_i5.BaseRequest? request) =>
      (super.noSuchMethod(Invocation.method(#send, [request]),
              returnValue: _i6.Future<_i4.IOStreamedResponse>.value(
                  _FakeIOStreamedResponse_3(
                      this, Invocation.method(#send, [request]))))
          as _i6.Future<_i4.IOStreamedResponse>);
  @override
  void close() => super.noSuchMethod(Invocation.method(#close, []),
      returnValueForMissingStub: null);
  @override
  _i6.Future<_i5.Response> head(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#head, [url], {#headers: headers}),
              returnValue: _i6.Future<_i5.Response>.value(_FakeResponse_4(
                  this, Invocation.method(#head, [url], {#headers: headers}))))
          as _i6.Future<_i5.Response>);
  @override
  _i6.Future<_i5.Response> get(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#get, [url], {#headers: headers}),
              returnValue: _i6.Future<_i5.Response>.value(_FakeResponse_4(
                  this, Invocation.method(#get, [url], {#headers: headers}))))
          as _i6.Future<_i5.Response>);
  @override
  _i6.Future<_i5.Response> post(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i14.Encoding? encoding}) =>
      (super
          .noSuchMethod(Invocation.method(#post, [url], {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: _i6.Future<_i5.Response>.value(_FakeResponse_4(
                  this,
                  Invocation.method(#post, [
                    url
                  ], {
                    #headers: headers,
                    #body: body,
                    #encoding: encoding
                  })))) as _i6.Future<_i5.Response>);
  @override
  _i6.Future<_i5.Response> put(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i14.Encoding? encoding}) =>
      (super
          .noSuchMethod(Invocation.method(#put, [url], {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: _i6.Future<_i5.Response>.value(_FakeResponse_4(
                  this,
                  Invocation.method(#put, [
                    url
                  ], {
                    #headers: headers,
                    #body: body,
                    #encoding: encoding
                  })))) as _i6.Future<_i5.Response>);
  @override
  _i6.Future<_i5.Response> patch(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i14.Encoding? encoding}) =>
      (super
          .noSuchMethod(Invocation.method(#patch, [url], {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: _i6.Future<_i5.Response>.value(_FakeResponse_4(
                  this,
                  Invocation.method(#patch, [
                    url
                  ], {
                    #headers: headers,
                    #body: body,
                    #encoding: encoding
                  })))) as _i6.Future<_i5.Response>);
  @override
  _i6.Future<_i5.Response> delete(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i14.Encoding? encoding}) =>
      (super
          .noSuchMethod(Invocation.method(#delete, [url], {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: _i6.Future<_i5.Response>.value(_FakeResponse_4(
                  this,
                  Invocation.method(#delete, [
                    url
                  ], {
                    #headers: headers,
                    #body: body,
                    #encoding: encoding
                  })))) as _i6.Future<_i5.Response>);
  @override
  _i6.Future<String> read(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#read, [url], {#headers: headers}),
          returnValue: _i6.Future<String>.value('')) as _i6.Future<String>);
  @override
  _i6.Future<_i15.Uint8List> readBytes(Uri? url,
          {Map<String, String>? headers}) =>
      (super.noSuchMethod(
              Invocation.method(#readBytes, [url], {#headers: headers}),
              returnValue: _i6.Future<_i15.Uint8List>.value(_i15.Uint8List(0)))
          as _i6.Future<_i15.Uint8List>);
}
