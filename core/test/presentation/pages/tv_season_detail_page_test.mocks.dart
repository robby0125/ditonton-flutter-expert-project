// Mocks generated by Mockito 5.2.0 from annotations
// in core/test/presentation/pages/tv_season_detail_page_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i8;
import 'dart:ui' as _i9;

import 'package:core/domain/entities/tv_detail.dart' as _i4;
import 'package:core/domain/entities/tv_season_detail.dart' as _i5;
import 'package:core/domain/usecases/get_tv_detail.dart' as _i2;
import 'package:core/domain/usecases/get_tv_season_detail.dart' as _i3;
import 'package:core/presentation/provider/tv_season_detail_notifier.dart'
    as _i6;
import 'package:core/utils/state_enum.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeGetTvDetail_0 extends _i1.Fake implements _i2.GetTvDetail {}

class _FakeGetTvSeasonDetail_1 extends _i1.Fake
    implements _i3.GetTvSeasonDetail {}

class _FakeTvDetail_2 extends _i1.Fake implements _i4.TvDetail {}

class _FakeTvSeasonDetail_3 extends _i1.Fake implements _i5.TvSeasonDetail {}

/// A class which mocks [TvSeasonDetailNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvSeasonDetailNotifier extends _i1.Mock
    implements _i6.TvSeasonDetailNotifier {
  MockTvSeasonDetailNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GetTvDetail get getTvDetail =>
      (super.noSuchMethod(Invocation.getter(#getTvDetail),
          returnValue: _FakeGetTvDetail_0()) as _i2.GetTvDetail);
  @override
  _i3.GetTvSeasonDetail get getTvSeasonDetail =>
      (super.noSuchMethod(Invocation.getter(#getTvSeasonDetail),
          returnValue: _FakeGetTvSeasonDetail_1()) as _i3.GetTvSeasonDetail);
  @override
  _i4.TvDetail get tvDetail => (super.noSuchMethod(Invocation.getter(#tvDetail),
      returnValue: _FakeTvDetail_2()) as _i4.TvDetail);
  @override
  _i5.TvSeasonDetail get tvSeasonDetail =>
      (super.noSuchMethod(Invocation.getter(#tvSeasonDetail),
          returnValue: _FakeTvSeasonDetail_3()) as _i5.TvSeasonDetail);
  @override
  _i7.RequestState get requestState =>
      (super.noSuchMethod(Invocation.getter(#requestState),
          returnValue: _i7.RequestState.Empty) as _i7.RequestState);
  @override
  String get message =>
      (super.noSuchMethod(Invocation.getter(#message), returnValue: '')
          as String);
  @override
  int get curEpisodeExpanded => (super
          .noSuchMethod(Invocation.getter(#curEpisodeExpanded), returnValue: 0)
      as int);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  _i8.Future<void> fetchTvSeasonDetail(int? tvId, int? seasonNumber) =>
      (super.noSuchMethod(
          Invocation.method(#fetchTvSeasonDetail, [tvId, seasonNumber]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i8.Future<void>);
  @override
  void expandEpisodePanel(int? index) =>
      super.noSuchMethod(Invocation.method(#expandEpisodePanel, [index]),
          returnValueForMissingStub: null);
  @override
  void addListener(_i9.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void removeListener(_i9.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void notifyListeners() =>
      super.noSuchMethod(Invocation.method(#notifyListeners, []),
          returnValueForMissingStub: null);
}
